# Makefile for project
# Builds object files into build/ and produces binaries there.

CC := gcc
SRCDIR := src
BUILDDIR := build
INCDIR := src

# Compiler flags - override by calling e.g. make CFLAGS="-O2 -DNDEBUG"
CFLAGS := -Wall -Wextra -std=c11 -g -I$(INCDIR) -MMD -MP
LDFLAGS :=
LDLIBS :=

SRCS := $(wildcard $(SRCDIR)/*.c)
OBJS := $(patsubst $(SRCDIR)/%.c,$(BUILDDIR)/%.o,$(SRCS))
DEPS := $(OBJS:.o=.d)

# Common binaries you might want to build; each will be linked from all .o files
# (If you prefer specific link sets for each binary, edit the targets accordingly.)
BINS := $(BUILDDIR)/program $(BUILDDIR)/index_tool $(BUILDDIR)/p1-dataProgram

.PHONY: all clean rebuild help program index_tool p1-dataProgram

all: $(BUILDDIR)/program

# Build the build directory (order-only prerequisite)
$(BUILDDIR):
	@mkdir -p $(BUILDDIR)

# Compile each .c in src/ to build/*.o
$(BUILDDIR)/%.o: $(SRCDIR)/%.c | $(BUILDDIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Generic link rule: any target under build/ will be linked from all object files
$(BUILDDIR)/%: $(OBJS) | $(BUILDDIR)
	$(CC) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

# Convenience phony targets to build named binaries
program: $(BUILDDIR)/program
index_tool: $(BUILDDIR)/index_tool
p1-dataProgram: $(BUILDDIR)/p1-dataProgram

# Include dependency files generated by -MMD
-include $(DEPS)

clean:
	rm -f $(BUILDDIR)/*.o $(BUILDDIR)/*.d $(BINS)

rebuild: clean all

help:
	@echo "Makefile targets:"
	@echo "  make           (builds $(BUILDDIR)/program)"
	@echo "  make program   (same as default)"
	@echo "  make index_tool"
	@echo "  make p1-dataProgram"
	@echo "  make clean"
	@echo "  make rebuild"

# Notes:
# - This Makefile compiles every .c file in src/ into build/*.o and links all objects when producing a binary.